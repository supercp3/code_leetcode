类的高级方法
1.1静态方法(@staticmethod)
	把其修饰的方法变成一个静态方法
	普通的方法。可以再实例化后直接调用，并且在方法里可以通过self.调用实例变量或类变量
	静态方法不可以访问实例变量或类变量的
	d=Dog("wangcai")
	d.eat() 是错误的
	d.eat(d)这样才可以

1.2类方法
	通过@classmethod装饰器实现
	类方法只能访问类变量，不能访问实例变量
1.3属性方法
	属性方法的作用就是通过@property 把一个方法变成一个静态属性
	(函数->变量)
	函数没办法传参数，而且调用的时候不用加(),不能像普通变量那样“=”赋值
	如：d.eat

2类的特殊成员方法
2.1 __doc__ 表示类的描述信息
2.2 __module__和__class__
	__module__表示当前操作的对象在哪个模块
	__class__表示当前操作的对象的类是什么

2.3 __init__ 构造方法
通过类创建对象时，自动触发执行
2.4 __del__  析构函数
当对象在内存中被释放时，自动触发执行

2.5 __call__
对象后面加括号，触发执行
构造方法的执行是由创建对象触发的，即：对象 = 类名() ；而对于 call 方法的执行是由对象后加括号触发的，即：对象() 或者 类()()

2.6 __dict__方法 
查看类或对象中所有成员

2.7 __str__方法
如果一个类中定义了str方法，那么在打印对象时，默认输出该方法的返回值

2.8 __getitem__、__setitem__、__delitem__
用于索引操作，如字典。（分别表示获取、设置、删除数据）





